import requests
from bs4 import BeautifulSoup
from aiogram.types import InputFile
from datetime import datetime
from aiogram.types import ChatActions
from aiogram import types
from aiogram.dispatcher import Dispatcher
from aiogram.dispatcher.filters import Command, Text
from aiogram.dispatcher.filters.state import State, StatesGroup
from aiogram.types import ParseMode
from aiogram.contrib.middlewares.logging import LoggingMiddleware
from aiogram.contrib.fsm_storage.memory import MemoryStorage  # –ò–º–ø–æ—Ä—Ç MemoryStorage
import logging
import asyncio
import asyncio
import logging
from aiogram import types
from aiogram.dispatcher import Dispatcher
from aiogram.dispatcher.filters import Command, Text
from aiogram.dispatcher.filters.state import State, StatesGroup
from aiogram.types import ParseMode
from aiogram.contrib.middlewares.logging import LoggingMiddleware
import logging
import asyncio
import redis
from aiogram import Bot, Dispatcher, types
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters import Command, Text
from aiogram.contrib.middlewares.logging import LoggingMiddleware
from aiogram.dispatcher.storage import FSMContextProxy
from aiogram.dispatcher.storage import FSMContext
from aiogram.dispatcher.filters import Text
from aiogram.utils.markdown import hlink



# –í–∫–ª—é—á–∞–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ, —á—Ç–æ–±—ã –Ω–µ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å –≤–∞–∂–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
logging.basicConfig(level=logging.INFO)
# –û–±—ä–µ–∫—Ç –±–æ—Ç–∞
bot = Bot(token="6380874791:AAHu--ztTOsFvtkY3xqPEdXwvK80N5VnyfQ")
# –î–∏—Å–ø–µ—Ç—á–µ—Ä
dp = Dispatcher(bot, storage=MemoryStorage())
dp.middleware.setup(LoggingMiddleware())

storage = redis.Redis(host='localhost', port=6379, db=0, decode_responses=True)


class DrugoeState(StatesGroup):
    waiting_for_drugoe_price = State()
    waiting_for_drugoe_weight = State()


class UserState(StatesGroup):
    waiting_for_shmot_price = State()


# –•—ç–Ω–¥–ª–µ—Ä –Ω–∞ –∫–æ–º–∞–Ω–¥—É /start
@dp.message_handler(Command("start"), state="*")
async def cmd_start(message: types.Message):
    kb = [
        [
            types.KeyboardButton(text="–ì–∞–π–¥ –ø–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—é Poizon üìÉ"),
            types.KeyboardButton(text="–û—Ç–∑—ã–≤—ã –Ω–∞—à–∏—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤ üìí")
        ],
        [
            types.KeyboardButton(text="–ê–∫—Ç—É–∞–ª—å–Ω—ã–µ –∫—É—Ä—Å—ã ¬• –∏ $ üìà"),
            types.KeyboardButton(text="–ù–∞—à–∏ —Å–æ—Ü. —Å–µ—Ç–∏ üíª")
        ],
        [
            types.KeyboardButton(text="–†–∞—Å—Å—á–∏—Ç–∞—Ç—å —Ü–µ–Ω—É —Ç–æ–≤–∞—Ä–∞ üí¥"),
            types.KeyboardButton(text="–û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑ üë®üèª‚Äçüíª")
        ]
    ]
    keyboard = types.ReplyKeyboardMarkup(
        keyboard=kb,
        resize_keyboard=True,
        input_field_placeholder="–°—Ç–∞—Ä—Ç–æ–≤–æ–µ –º–µ–Ω—é"
    )
    await message.answer('–ü—Ä–∏–≤–µ—Ç, —è –ë–æ—Ç –∫–∞–Ω–∞–ª–∞ <a href="https://t.me/sneakerspot1">SNEAKER SPOT</a>! üëü \n\n–Ø —Å–æ–∑–¥–∞–Ω —Å —Ü–µ–ª—å—é —Å–±–æ—Ä–∞ –≤—Å–µ–π –ø–æ–ª–µ–∑–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏, –∞ —Ç–∞–∫–∂–µ –≤–æ–ø—Ä–æ—Å–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥—É—Ç –≤–æ–∑–Ω–∏–∫–Ω—É—Ç—å –ø—Ä–∏ –∑–∞–∫–∞–∑–µ —Å –∫–∏—Ç–∞–π—Å–∫–æ–π —Ç–æ—Ä–≥–æ–≤–æ–π –ø–ª–æ—â–∞–¥–∫–∏.ü§ñ', reply_markup=keyboard, parse_mode="HTML")


# –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –∏–º–ø–æ—Ä—Ç –∏ —Ñ–∏–ª—å—Ç—Ä Text
@dp.message_handler(Text(equals="–ì–∞–π–¥ –ø–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—é Poizon üìÉ"))
async def gaid(message: types.Message):

    # last_bot_message_id = last_bot_messages.get(message.chat.id)
    # if last_bot_message_id:
    #     await bot.delete_message(chat_id=message.chat.id, message_id=last_bot_message_id)
    #
    # await bot.delete_message(chat_id=message.chat.id, message_id=message.message_id)

    guide_link = "https://telegra.ph/Gajd-po-prilozheniyu-Poizon-08-15"

    keyboard = types.InlineKeyboardMarkup()
    link_button = types.InlineKeyboardButton(text="–û—Ç–∫—Ä–æ–π—Ç–µ –≥–∞–π–¥ –ø–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—é Poizon", url=guide_link)
    keyboard.add(link_button)
    with open('poiz.jpg', 'rb') as photo:
        photo = InputFile(photo)
        await bot.send_photo(chat_id=message.chat.id, photo=photo, caption="–°–ø–µ—Ü–∏–∞–ª—å–Ω–æ –¥–ª—è –í–∞—Å –º—ã –ø–æ–¥–≥–æ—Ç–æ–≤–∏–ª–∏ —Å—Ç–∞—Ç—å—é, –≤ –∫–æ—Ç–æ—Ä–æ–π —Ä–∞—Å—Å–∫–∞–∑–∞–ª–∏ –ø—Ä–æ –≤—Å–µ –¥–µ—Ç–∞–ª–∏ –∏ –Ω—é–∞–Ω—Å—ã –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è Poizon, –≤ —Ç–æ–º —á–∏—Å–ª–µ –∏ —Ä–∞—Å—Å–∫–∞–∑–∞–ª–∏, –∫–∞–∫ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è –Ω–∞ —ç—Ç–æ–π —Ç–æ—Ä–≥–æ–≤–æ–π –ø–ª–æ—â–∞–¥–∫–µ üëá", reply_markup=keyboard)




@dp.message_handler(Text(equals="–û—Ç–∑—ã–≤—ã –Ω–∞—à–∏—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤ üìí"))
async def open_reviews(message: types.Message):
    reviews_link = "https://t.me/feedbacksneakerspot1"

    # –£–¥–∞–ª–µ–Ω–∏–µ –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –±–æ—Ç–∞ (–µ—Å–ª–∏ –µ—Å—Ç—å)
    # last_bot_message_id = last_bot_messages.get(message.chat.id)
    # if last_bot_message_id:
    #     await bot.delete_message(chat_id=message.chat.id, message_id=last_bot_message_id)
    #
    # await bot.delete_message(chat_id=message.chat.id, message_id=message.message_id)

    # –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫—É-–≥–∏–ø–µ—Ä—Å—Å—ã–ª–∫—É
    keyboard = types.InlineKeyboardMarkup()
    link_button = types.InlineKeyboardButton(text="–û—Ç–∫—Ä–æ–π—Ç–µ –æ—Ç–∑—ã–≤—ã –Ω–∞—à–∏—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤", url=reviews_link)
    keyboard.add(link_button)

    sent_message = await bot.send_message(chat_id=message.chat.id,
                                          text="–í—ã –º–æ–∂–µ—Ç–µ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –æ—Ç–∑—ã–≤—ã –Ω–∞—à–∏—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤ –ø–æ —Å—Å—ã–ª–∫–µ:",
                                          reply_markup=keyboard)

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –±–æ—Ç–∞
    # last_bot_messages[message.chat.id] = sent_message.message_id


@dp.message_handler(Text(equals="–ê–∫—Ç—É–∞–ª—å–Ω—ã–µ –∫—É—Ä—Å—ã ¬• –∏ $ üìà"))
async def kurs(message: types.Message):

    # last_bot_message_id = last_bot_messages.get(message.chat.id)
    # if last_bot_message_id:
    #     await bot.delete_message(chat_id=message.chat.id, message_id=last_bot_message_id)
    #
    # await bot.delete_message(chat_id=message.chat.id, message_id=message.message_id)
    sent_message = await bot.send_message(chat_id=message.chat.id,
                                          text="–°–µ–∫—É–Ω–¥—É, –∑–∞–≥—Ä—É–∂–∞—é—Ç—Å—è –∫—É—Ä—Å—ã...")

    url_dollar = "https://www.google.com/search?q=%D0%BA%D1%83%D1%80%D1%81+%D0%B4%D0%BE%D0%BB%D0%BB%D0%B0%D1%80%D0%B0+%D0%BA+%D1%80%D1%83%D0%B1%D0%BB%D1%8E&sca_esv=557255143&sxsrf=AB5stBgUqRgQt9Lg-ktQi2mwNk3uJzxFQg%3A1692141647367&ei=TwjcZNmIFoaawPAPtNaL0Aw&ved=0ahUKEwiZ7LPu5t-AAxUGDRAIHTTrAsoQ4dUDCA8&uact=5&oq=%D0%BA%D1%83%D1%80%D1%81+%D0%B4%D0%BE%D0%BB%D0%BB%D0%B0%D1%80%D0%B0+%D0%BA+%D1%80%D1%83%D0%B1%D0%BB%D1%8E&gs_lp=Egxnd3Mtd2l6LXNlcnAiJdC60YPRgNGBINC00L7Qu9C70LDRgNCwINC6INGA0YPQsdC70Y4yEBAAGIAEGLEDGIMBGEYYggIyCxAAGIAEGLEDGIMBMgsQABiABBixAxiDATILEAAYgAQYsQMYgwEyCBAAGIAEGLEDMgsQABiABBixAxiDATIFEAAYgAQyBRAAGIAEMgUQABiABDIFEAAYgARIuzBQpQJYnC5wBHgBkAEAmAHhAaAB2h6qAQYwLjIyLjG4AQPIAQD4AQGoAhTCAgcQIxjqAhgnwgIWEC4YAxiPARjqAhi0AhiMAxjlAtgBAcICFhAAGAMYjwEY6gIYtAIYjAMY5QLYAQHCAgcQIxiKBRgnwgILEC4YgAQYsQMYgwHCAhEQLhiABBixAxiDARjHARjRA8ICBxAAGIoFGEPCAg0QLhiKBRixAxiDARhDwgIHEC4YigUYQ8ICDRAAGIoFGLEDGIMBGEPCAgUQLhiABMICBBAjGCfCAhAQABiKBRixAxiDARjJAxhDwgIIEAAYigUYkgPCAgoQABiKBRjJAxhD4gMEGAAgQYgGAboGBggBEAEYCw&sclient=gws-wiz-serp"  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π URL –¥–ª—è –∫—É—Ä—Å–∞ –¥–æ–ª–ª–∞—Ä–∞
    headers = {'User-Agent': 'Mozilla/5.0 (iPhone; CPU iPhone OS 16_0 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/16.0 Mobile/15E148 Safari/604.1'}
    url_yuan = "https://www.google.com/search?q=%D0%BA%D1%83%D1%80%D1%81+%D1%8E%D0%B0%D0%BD%D0%B8+%D0%BA+%D1%80%D1%83%D0%B1%D0%BB%D1%8E&sca_esv=557255143&sxsrf=AB5stBiCHC9hllmlUGu3GfOL1klsBV5_PA%3A1692141655066&ei=VwjcZL3aA_S_wPAPsqyb4Ao&oq=%D0%BA%D1%83%D1%80%D1%81+%D1%8E%D0%B0%D0%BD%D0%B8+%D0%BA+%D1%80%D1%83%D0%BB&gs_lp=Egxnd3Mtd2l6LXNlcnAiG9C60YPRgNGBINGO0LDQvdC4INC6INGA0YPQuyoCCAAyDBAAGA0YgAQYRhiCAjIHEAAYDRiABDIHEAAYDRiABDIHEAAYDRiABDIHEAAYDRiABDIHEAAYDRiABDIHEAAYDRiABDIGEAAYFhgeMgYQABgWGB4yBhAAGBYYHkiZOVDRBljQJnABeAGQAQCYAbQBoAGFE6oBBDAuMTW4AQHIAQD4AQGoAhTCAgcQIxjqAhgnwgIQEAAYigUY6gIYtAIYQ9gBAcICBxAjGIoFGCfCAgQQIxgnwgIQEAAYgAQYFBiHAhixAxiDAcICCxAAGIAEGLEDGIMBwgILEAAYigUYsQMYgwHCAg0QABiKBRixAxiDARhDwgIHEAAYigUYQ8ICDBAjGIoFGCcYRhiCAsICDRAAGIAEGBQYhwIYsQPCAgoQABiABBgUGIcCwgIFEAAYgATCAg8QABiABBgUGIcCGEYYggLiAwQYACBBiAYBugYGCAEQARgB&sclient=gws-wiz-serp"  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π URL –¥–ª—è –∫—É—Ä—Å–∞ —é–∞–Ω—è

    response_dollar = requests.get(url_dollar,headers=headers)
    response_yuan = requests.get(url_yuan, headers=headers)

    soup_dollar = BeautifulSoup(response_dollar.text, "html.parser")
    soup_yuan = BeautifulSoup(response_yuan.text, "html.parser")

    dollar_rate = soup_dollar.findAll("span", {"class": "DFlfde", "class": "SwHCTb"})[0].text.replace(',','.')
    yuan_rate = soup_yuan.findAll("span", {"class": "DFlfde", "class": "SwHCTb"})[0].text.replace(',','.')

    now = datetime.now()
    formatted_datetime = now.strftime("%d.%m.%Y %H:%M:%S")
    with open('kurs.jpg', 'rb') as photo:
        photo = InputFile(photo)
        await bot.send_photo(chat_id=message.chat.id, photo=photo, caption=f"–ê–∫—Ç—É–∞–ª—å–Ω—ã–π –∫—É—Ä—Å –Ω–∞ {formatted_datetime}: ‚åöÔ∏è\n\n"

                            f"$ (USD) - {round(float(dollar_rate), 1)} ‚ÇΩ\n"
                            f"¬• (CNY) - {round(float(yuan_rate) + 0.7, 1)} ‚ÇΩ")
    # await message.answer(f"–ê–∫—Ç—É–∞–ª—å–Ω—ã–π –∫—É—Ä—Å –Ω–∞ {formatted_datetime}: ‚åöÔ∏è\n"
    #
    #                         f"$ (USD) - {round(float(dollar_rate), 1)} ‚ÇΩ\n"
    #                         f"¬• (CNY) - {round(float(yuan_rate) + 0.7, 1)} ‚ÇΩ")

    # last_bot_messages[message.chat.id] = sent_message.message_id


@dp.message_handler(Text(equals="–ù–∞—à–∏ —Å–æ—Ü. —Å–µ—Ç–∏ üíª"))
async def social_media(message: types.Message):
    telegram_link = 'https://t.me/sneakerspot1'
    inst_link = 'https://instagram.com/sneakerspot_only1?igshid=MjEwN2IyYWYwYw=='

    keyboard = types.InlineKeyboardMarkup()
    link_button_tel = types.InlineKeyboardButton(text="–ù–∞—à —Ç–µ–ª–µ–≥—Ä–∞–º", url=telegram_link)
    link_button_vk = types.InlineKeyboardButton(text="–ù–∞—à –∏–Ω—Å—Ç–∞–≥—Ä–∞–º", url=inst_link)
    keyboard.add(link_button_tel, link_button_vk)

    await message.answer("–í—ã –º–æ–∂–µ—Ç–µ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –æ—Ç–∑—ã–≤—ã –Ω–∞—à–∏—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤, –Ω–∞–∂–∞–≤ –Ω–∞ –∫–Ω–æ–ø–∫—É:", reply_markup=keyboard)


@dp.message_handler(Text(equals="–†–∞—Å—Å—á–∏—Ç–∞—Ç—å —Ü–µ–Ω—É —Ç–æ–≤–∞—Ä–∞ üí¥"))
async def product_price(message: types.Message):
    kb = [
        [
            types.KeyboardButton(text="–û–±—É–≤—å"),
            types.KeyboardButton(text="–í–µ—Ä—Ö–Ω—è—è –æ–¥–µ–∂–¥–∞")
        ],
        [
            types.KeyboardButton(text="–¢–æ–ª—Å—Ç–æ–≤–∫–∏/—à—Ç–∞–Ω—ã"),
            types.KeyboardButton(text="–§—É—Ç–±–æ–ª–∫–∏/—à–æ—Ä—Ç—ã")
        ],
        [
            types.KeyboardButton(text="–ù–æ—Å–∫–∏/–Ω–∏–∂–Ω–µ–µ –±–µ–ª—å–µ"),
            types.KeyboardButton(text="–°—É–º–∫–∏")
        ],
        [
            types.KeyboardButton(text="–î—Ä—É–≥–æ–µ"),
            types.KeyboardButton(text="–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥")
        ]
    ]
    keyboard = types.ReplyKeyboardMarkup(
        keyboard=kb,
        resize_keyboard=True,
        input_field_placeholder="–ú–µ–Ω—é —Ç–æ–≤–∞—Ä–∞"
    )
    await message.answer(
        '–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é —Ç–æ–≤–∞—Ä–∞',
        reply_markup=keyboard, parse_mode="HTML")
    await DrugoeState.waiting_for_drugoe_price.set()




@dp.message_handler(Text(equals="–û–±—É–≤—å"), state="*")
async def enter_shoe_price(message: types.Message, state: FSMContext):
    but = '–û–±—É–≤—å'
    massa = 1200
    kit_com = 350
    await state.update_data(massa=massa, kit_com=kit_com)
    await message.answer(f"–í–≤–µ–¥–∏—Ç–µ —Å—Ç–æ–∏–º–æ—Å—Ç—å {but} –≤ —é–∞–Ω—è—Ö:")
    await UserState.waiting_for_shmot_price.set()

@dp.message_handler(Text(equals="–í–µ—Ä—Ö–Ω—è—è –æ–¥–µ–∂–¥–∞"), state="*")
async def enter_shoe_price(message: types.Message, state: FSMContext):
    but = '–í–µ—Ä—Ö–Ω—è—è –æ–¥–µ–∂–¥–∞'
    massa = 1300
    kit_com = 350
    await state.update_data(massa=massa, kit_com=kit_com)
    await message.answer(f"–í–≤–µ–¥–∏—Ç–µ —Å—Ç–æ–∏–º–æ—Å—Ç—å {but} –≤ —é–∞–Ω—è—Ö:")
    await UserState.waiting_for_shmot_price.set()

@dp.message_handler(Text(equals="–¢–æ–ª—Å—Ç–æ–≤–∫–∏/—à—Ç–∞–Ω—ã"), state="*")
async def enter_shoe_price(message: types.Message, state: FSMContext):
    but = '–¢–æ–ª—Å—Ç–æ–≤–∫–∏/—à—Ç–∞–Ω—ã'
    massa = 1000
    kit_com = 250
    await state.update_data(massa=massa, kit_com=kit_com)
    await message.answer(f"–í–≤–µ–¥–∏—Ç–µ —Å—Ç–æ–∏–º–æ—Å—Ç—å {but} –≤ —é–∞–Ω—è—Ö:")
    await UserState.waiting_for_shmot_price.set()

@dp.message_handler(Text(equals="–§—É—Ç–±–æ–ª–∫–∏/—à–æ—Ä—Ç—ã"), state="*")
async def enter_shoe_price(message: types.Message, state: FSMContext):
    but = '–§—É—Ç–±–æ–ª–∫–∏/—à–æ—Ä—Ç—ã'
    massa = 600
    kit_com = 250
    await state.update_data(massa=massa, kit_com=kit_com)
    await message.answer(f"–í–≤–µ–¥–∏—Ç–µ —Å—Ç–æ–∏–º–æ—Å—Ç—å {but} –≤ —é–∞–Ω—è—Ö:")
    await UserState.waiting_for_shmot_price.set()

@dp.message_handler(Text(equals="–ù–æ—Å–∫–∏/–Ω–∏–∂–Ω–µ–µ –±–µ–ª—å–µ"), state="*")
async def enter_shoe_price(message: types.Message, state: FSMContext):
    but = '–ù–æ—Å–∫–∏/–Ω–∏–∂–Ω–µ–µ –±–µ–ª—å–µ'
    massa = 250
    kit_com = 250
    await state.update_data(massa=massa, kit_com=kit_com)
    await message.answer(f"–í–≤–µ–¥–∏—Ç–µ —Å—Ç–æ–∏–º–æ—Å—Ç—å {but} –≤ —é–∞–Ω—è—Ö:")
    await UserState.waiting_for_shmot_price.set()

@dp.message_handler(Text(equals="–°—É–º–∫–∏"), state="*")
async def enter_shoe_price(message: types.Message, state: FSMContext):
    but = '–°—É–º–∫–∏'
    massa = 1250
    kit_com = 350
    await state.update_data(massa=massa, kit_com=kit_com)
    await message.answer(f"–í–≤–µ–¥–∏—Ç–µ —Å—Ç–æ–∏–º–æ—Å—Ç—å {but} –≤ —é–∞–Ω—è—Ö:")
    await UserState.waiting_for_shmot_price.set()

@dp.message_handler(lambda message: message.text.isdigit(), state=UserState.waiting_for_shmot_price)
async def process_shmot_price(message: types.Message, state: FSMContext):
    try:
        price = round(float(str(message.text)))
        print(price)
    except ValueError:
        await message.answer('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ —á–∏—Å–ª–æ.')

    if price >= 1000:
        com = 50
    elif price >= 500:
        com = 30
    elif price < 500:
        com = 20



    # –ü–æ–ª—É—á–∏—Ç–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—É—é —Ü–µ–Ω—É –∏–∑ —Å–æ—Å—Ç–æ—è–Ω–∏—è
    data = await state.get_data()
    massa = data.get('massa')
    kit_com = data.get('kit_com')

    # –í—ã—á–∏—Å–ª–∏—Ç–µ –æ–±—â—É—é —Å—Ç–æ–∏–º–æ—Å—Ç—å (—Ü–µ–Ω–∞ * –≤–µ—Å)


    kb = [
        [
            types.KeyboardButton(text="–ì–∞–π–¥ –ø–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—é Poizon üìÉ"),
            types.KeyboardButton(text="–û—Ç–∑—ã–≤—ã –Ω–∞—à–∏—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤ üìí")
        ],
        [
            types.KeyboardButton(text="–ê–∫—Ç—É–∞–ª—å–Ω—ã–µ –∫—É—Ä—Å—ã ¬• –∏ $ üìà"),
            types.KeyboardButton(text="–ù–∞—à–∏ —Å–æ—Ü. —Å–µ—Ç–∏ üíª")
        ],
        [
            types.KeyboardButton(text="–†–∞—Å—Å—á–∏—Ç–∞—Ç—å —Ü–µ–Ω—É —Ç–æ–≤–∞—Ä–∞ üí¥"),
            types.KeyboardButton(text="–û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑ üë®üèª‚Äçüíª")
        ]
    ]
    keyboard = types.ReplyKeyboardMarkup(
        keyboard=kb,
        resize_keyboard=True,
        input_field_placeholder="–°—Ç–∞—Ä—Ç–æ–≤–æ–µ –º–µ–Ω—é"
    )



    url_dollar = "https://www.google.com/search?q=%D0%BA%D1%83%D1%80%D1%81+%D0%B4%D0%BE%D0%BB%D0%BB%D0%B0%D1%80%D0%B0+%D0%BA+%D1%80%D1%83%D0%B1%D0%BB%D1%8E&sca_esv=557255143&sxsrf=AB5stBgUqRgQt9Lg-ktQi2mwNk3uJzxFQg%3A1692141647367&ei=TwjcZNmIFoaawPAPtNaL0Aw&ved=0ahUKEwiZ7LPu5t-AAxUGDRAIHTTrAsoQ4dUDCA8&uact=5&oq=%D0%BA%D1%83%D1%80%D1%81+%D0%B4%D0%BE%D0%BB%D0%BB%D0%B0%D1%80%D0%B0+%D0%BA+%D1%80%D1%83%D0%B1%D0%BB%D1%8E&gs_lp=Egxnd3Mtd2l6LXNlcnAiJdC60YPRgNGBINC00L7Qu9C70LDRgNCwINC6INGA0YPQsdC70Y4yEBAAGIAEGLEDGIMBGEYYggIyCxAAGIAEGLEDGIMBMgsQABiABBixAxiDATILEAAYgAQYsQMYgwEyCBAAGIAEGLEDMgsQABiABBixAxiDATIFEAAYgAQyBRAAGIAEMgUQABiABDIFEAAYgARIuzBQpQJYnC5wBHgBkAEAmAHhAaAB2h6qAQYwLjIyLjG4AQPIAQD4AQGoAhTCAgcQIxjqAhgnwgIWEC4YAxiPARjqAhi0AhiMAxjlAtgBAcICFhAAGAMYjwEY6gIYtAIYjAMY5QLYAQHCAgcQIxiKBRgnwgILEC4YgAQYsQMYgwHCAhEQLhiABBixAxiDARjHARjRA8ICBxAAGIoFGEPCAg0QLhiKBRixAxiDARhDwgIHEC4YigUYQ8ICDRAAGIoFGLEDGIMBGEPCAgUQLhiABMICBBAjGCfCAhAQABiKBRixAxiDARjJAxhDwgIIEAAYigUYkgPCAgoQABiKBRjJAxhD4gMEGAAgQYgGAboGBggBEAEYCw&sclient=gws-wiz-serp"  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π URL –¥–ª—è –∫—É—Ä—Å–∞ –¥–æ–ª–ª–∞—Ä–∞
    headers = {
        'User-Agent': 'Mozilla/5.0 (iPhone; CPU iPhone OS 16_0 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/16.0 Mobile/15E148 Safari/604.1'}
    url_yuan = "https://www.google.com/search?q=%D0%BA%D1%83%D1%80%D1%81+%D1%8E%D0%B0%D0%BD%D0%B8+%D0%BA+%D1%80%D1%83%D0%B1%D0%BB%D1%8E&sca_esv=557255143&sxsrf=AB5stBiCHC9hllmlUGu3GfOL1klsBV5_PA%3A1692141655066&ei=VwjcZL3aA_S_wPAPsqyb4Ao&oq=%D0%BA%D1%83%D1%80%D1%81+%D1%8E%D0%B0%D0%BD%D0%B8+%D0%BA+%D1%80%D1%83%D0%BB&gs_lp=Egxnd3Mtd2l6LXNlcnAiG9C60YPRgNGBINGO0LDQvdC4INC6INGA0YPQuyoCCAAyDBAAGA0YgAQYRhiCAjIHEAAYDRiABDIHEAAYDRiABDIHEAAYDRiABDIHEAAYDRiABDIHEAAYDRiABDIHEAAYDRiABDIGEAAYFhgeMgYQABgWGB4yBhAAGBYYHkiZOVDRBljQJnABeAGQAQCYAbQBoAGFE6oBBDAuMTW4AQHIAQD4AQGoAhTCAgcQIxjqAhgnwgIQEAAYigUY6gIYtAIYQ9gBAcICBxAjGIoFGCfCAgQQIxgnwgIQEAAYgAQYFBiHAhixAxiDAcICCxAAGIAEGLEDGIMBwgILEAAYigUYsQMYgwHCAg0QABiKBRixAxiDARhDwgIHEAAYigUYQ8ICDBAjGIoFGCcYRhiCAsICDRAAGIAEGBQYhwIYsQPCAgoQABiABBgUGIcCwgIFEAAYgATCAg8QABiABBgUGIcCGEYYggLiAwQYACBBiAYBugYGCAEQARgB&sclient=gws-wiz-serp"  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π URL –¥–ª—è –∫—É—Ä—Å–∞ —é–∞–Ω—è

    response_dollar = requests.get(url_dollar, headers=headers)
    response_yuan = requests.get(url_yuan, headers=headers)

    soup_dollar = BeautifulSoup(response_dollar.text, "html.parser")
    soup_yuan = BeautifulSoup(response_yuan.text, "html.parser")

    dollar_rate = soup_dollar.findAll("span", {"class": "DFlfde", "class": "SwHCTb"})[0].text.replace(',', '.')
    yuan_rate = soup_yuan.findAll("span", {"class": "DFlfde", "class": "SwHCTb"})[0].text.replace(',', '.')

    now = datetime.now()
    formatted_datetime = now.strftime("%d.%m.%Y %H:%M:%S")

    dollar_kurs = round(float(dollar_rate), 1)
    yuan_kurs = round(float(yuan_rate) + 0.7, 1)

    if 50000 < (yuan_kurs * price):
        our_com = yuan_kurs * price * 0.06
    elif 30000 < (yuan_kurs * price) < 49999:
        our_com = yuan_kurs * price * 0.07
    elif 25000 < (yuan_kurs * price) < 29999:
        our_com = yuan_kurs * price * 0.08
    elif 15000 < (yuan_kurs * price) < 24999:
        our_com = yuan_kurs * price * 0.09
    elif 10000 < (yuan_kurs * price) < 14999:
        our_com = yuan_kurs * price * 0.10
    elif (yuan_kurs * price) < 9999:
        our_com = 1000



    total_price = (price * round(float(yuan_rate) + 0.7, 1)) + (our_com)  + ((massa/1000)*26*yuan_kurs) + (com * round(float(yuan_rate) + 0.7, 1)) + (kit_com)
    await message.answer(f"–ö–æ–Ω–µ—á–Ω–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å —Ç–æ–≤–∞—Ä–∞ = {round(total_price)} ‚ÇΩ\n\n"
                         f"–ê–∫—Ç—É–∞–ª—å–Ω—ã–π –∫—É—Ä—Å –Ω–∞ {formatted_datetime}: ‚åöÔ∏è\n\n"

                         f"$ (USD) - {round(float(dollar_rate), 1)} ‚ÇΩ\n"
                         f"¬• (CNY) - {round(float(yuan_rate) + 0.7, 1)} ‚ÇΩ\n\n"
                         f"‚ùì–ß—Ç–æ –≤–∫–ª—é—á–∞–µ—Ç –≤ —Å–µ–±—è —Å—Ç–æ–∏–º–æ—Å—Ç—å —Ç–æ–≤–∞—Ä–∞‚ùì\n\n"
                         f"–°—Ç–æ–∏–º–æ—Å—Ç—å —Ç–æ–≤–∞—Ä–∞ –Ω–∞ Poizon —Å —É—á–µ—Ç–æ–º –∞–∫—Ç—É–∞–ª—å–Ω–æ–≥–æ –∫—É—Ä—Å–∞ - {round((price * round(float(yuan_rate) + 0.7, 1)),5)} ‚ÇΩ\n"
                         f"–ù–∞—à–∞ –∫–æ–º–∏—Å—Å–∏—è - {round(our_com)} ‚ÇΩ\n"
                         f"–î–æ—Å—Ç–∞–≤–∫–∞ –ø–æ –ö–∏—Ç–∞—é - {kit_com} ‚ÇΩ\n"
                         f"–î–æ—Å—Ç–∞–≤–∫–∞ –∏–∑ –ö–∏—Ç–∞—è –≤ –ú–æ—Å–∫–≤—É ‚âà {round(((massa/1000)*26*yuan_kurs),5)} ‚ÇΩ\n"
                         f"–ö–æ–º–∏—Å—Å–∏—è –Ω–∞—à–µ–≥–æ –ø–æ—Å—Ä–µ–¥–Ω–∏–∫–∞ –∏–∑ –ö–∏—Ç–∞—è - {com * round(float(yuan_rate) + 0.7, 1)} ‚ÇΩ", reply_markup=keyboard)




    # –ó–∞–≤–µ—Ä—à–∏—Ç–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ, —á—Ç–æ–±—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –º–æ–≥ —Å–Ω–æ–≤–∞ –≤—ã–±–∏—Ä–∞—Ç—å —Ç–æ–≤–∞—Ä
    await state.finish()





@dp.message_handler(Text(equals="–î—Ä—É–≥–æ–µ"), state="*")
async def enter_drugoe_massa(message: types.Message):
    await message.answer("‚ùóÔ∏è–í–≤–µ–¥–∏—Ç–µ –≤–µ—Å —Ç–æ–≤–∞—Ä–∞, –∫–æ—Ç–æ—Ä—ã–π —Ö–æ—Ç–∏—Ç–µ –∑–∞–∫–∞–∑–∞—Ç—å –≤ –≥—Ä–∞–º–º–∞—Ö. –í–µ—Å –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—Ä–∏–º–µ—Ä–Ω—ã–º, —Å–º–æ—Ç—Ä–∏—Ç–µ –≤ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–µ‚ùóÔ∏è")
    await DrugoeState.waiting_for_drugoe_weight.set()

@dp.message_handler(lambda message: message.text.isdigit(), state=DrugoeState.waiting_for_drugoe_weight)
async def massa_drugoe(message: types.Message, state: DrugoeState):
    massa = int(message.text)
    kit_com = 450
    await message.answer(f"–í–≤–µ–¥–µ–Ω–Ω—ã–π –≤–µ—Å: {massa} –≥—Ä–∞–º–º", parse_mode=ParseMode.MARKDOWN)

    await state.update_data(massa=massa, kit_com=kit_com)

    await message.answer(f"–í–≤–µ–¥–∏—Ç–µ —Ü–µ–Ω—É –≤ —é–∞–Ω—è—Ö:")
    await DrugoeState.waiting_for_drugoe_price.set()

@dp.message_handler(lambda message: message.text.isdigit(), state=DrugoeState.waiting_for_drugoe_price)
async def process_drugoe_price(message: types.Message, state: FSMContext):
    try:
        price = round(float(str(message.text)))
        print(price)
    except ValueError:
        await message.answer('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ —á–∏—Å–ª–æ.')

    if price >= 1000:
        com = 50
    elif price >= 500:
        com = 30
    elif price < 500:
        com = 20

    # –ü–æ–ª—É—á–∏—Ç–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—É—é —Ü–µ–Ω—É –∏–∑ —Å–æ—Å—Ç–æ—è–Ω–∏—è
    data = await state.get_data()
    massa = data.get('massa')
    kit_com = data.get('kit_com')


    kb = [
        [
            types.KeyboardButton(text="–ì–∞–π–¥ –ø–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—é Poizon üìÉ"),
            types.KeyboardButton(text="–û—Ç–∑—ã–≤—ã –Ω–∞—à–∏—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤ üìí")
        ],
        [
            types.KeyboardButton(text="–ê–∫—Ç—É–∞–ª—å–Ω—ã–µ –∫—É—Ä—Å—ã ¬• –∏ $ üìà"),
            types.KeyboardButton(text="–ù–∞—à–∏ —Å–æ—Ü. —Å–µ—Ç–∏ üíª")
        ],
        [
            types.KeyboardButton(text="–†–∞—Å—Å—á–∏—Ç–∞—Ç—å —Ü–µ–Ω—É —Ç–æ–≤–∞—Ä–∞ üí¥"),
            types.KeyboardButton(text="–û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑ üë®üèª‚Äçüíª")
        ]
    ]
    keyboard = types.ReplyKeyboardMarkup(
        keyboard=kb,
        resize_keyboard=True,
        input_field_placeholder="–°—Ç–∞—Ä—Ç–æ–≤–æ–µ –º–µ–Ω—é"
    )
    url_dollar = "https://www.google.com/search?q=%D0%BA%D1%83%D1%80%D1%81+%D0%B4%D0%BE%D0%BB%D0%BB%D0%B0%D1%80%D0%B0+%D0%BA+%D1%80%D1%83%D0%B1%D0%BB%D1%8E&sca_esv=557255143&sxsrf=AB5stBgUqRgQt9Lg-ktQi2mwNk3uJzxFQg%3A1692141647367&ei=TwjcZNmIFoaawPAPtNaL0Aw&ved=0ahUKEwiZ7LPu5t-AAxUGDRAIHTTrAsoQ4dUDCA8&uact=5&oq=%D0%BA%D1%83%D1%80%D1%81+%D0%B4%D0%BE%D0%BB%D0%BB%D0%B0%D1%80%D0%B0+%D0%BA+%D1%80%D1%83%D0%B1%D0%BB%D1%8E&gs_lp=Egxnd3Mtd2l6LXNlcnAiJdC60YPRgNGBINC00L7Qu9C70LDRgNCwINC6INGA0YPQsdC70Y4yEBAAGIAEGLEDGIMBGEYYggIyCxAAGIAEGLEDGIMBMgsQABiABBixAxiDATILEAAYgAQYsQMYgwEyCBAAGIAEGLEDMgsQABiABBixAxiDATIFEAAYgAQyBRAAGIAEMgUQABiABDIFEAAYgARIuzBQpQJYnC5wBHgBkAEAmAHhAaAB2h6qAQYwLjIyLjG4AQPIAQD4AQGoAhTCAgcQIxjqAhgnwgIWEC4YAxiPARjqAhi0AhiMAxjlAtgBAcICFhAAGAMYjwEY6gIYtAIYjAMY5QLYAQHCAgcQIxiKBRgnwgILEC4YgAQYsQMYgwHCAhEQLhiABBixAxiDARjHARjRA8ICBxAAGIoFGEPCAg0QLhiKBRixAxiDARhDwgIHEC4YigUYQ8ICDRAAGIoFGLEDGIMBGEPCAgUQLhiABMICBBAjGCfCAhAQABiKBRixAxiDARjJAxhDwgIIEAAYigUYkgPCAgoQABiKBRjJAxhD4gMEGAAgQYgGAboGBggBEAEYCw&sclient=gws-wiz-serp"  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π URL –¥–ª—è –∫—É—Ä—Å–∞ –¥–æ–ª–ª–∞—Ä–∞
    headers = {
        'User-Agent': 'Mozilla/5.0 (iPhone; CPU iPhone OS 16_0 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/16.0 Mobile/15E148 Safari/604.1'}
    url_yuan = "https://www.google.com/search?q=%D0%BA%D1%83%D1%80%D1%81+%D1%8E%D0%B0%D0%BD%D0%B8+%D0%BA+%D1%80%D1%83%D0%B1%D0%BB%D1%8E&sca_esv=557255143&sxsrf=AB5stBiCHC9hllmlUGu3GfOL1klsBV5_PA%3A1692141655066&ei=VwjcZL3aA_S_wPAPsqyb4Ao&oq=%D0%BA%D1%83%D1%80%D1%81+%D1%8E%D0%B0%D0%BD%D0%B8+%D0%BA+%D1%80%D1%83%D0%BB&gs_lp=Egxnd3Mtd2l6LXNlcnAiG9C60YPRgNGBINGO0LDQvdC4INC6INGA0YPQuyoCCAAyDBAAGA0YgAQYRhiCAjIHEAAYDRiABDIHEAAYDRiABDIHEAAYDRiABDIHEAAYDRiABDIHEAAYDRiABDIHEAAYDRiABDIGEAAYFhgeMgYQABgWGB4yBhAAGBYYHkiZOVDRBljQJnABeAGQAQCYAbQBoAGFE6oBBDAuMTW4AQHIAQD4AQGoAhTCAgcQIxjqAhgnwgIQEAAYigUY6gIYtAIYQ9gBAcICBxAjGIoFGCfCAgQQIxgnwgIQEAAYgAQYFBiHAhixAxiDAcICCxAAGIAEGLEDGIMBwgILEAAYigUYsQMYgwHCAg0QABiKBRixAxiDARhDwgIHEAAYigUYQ8ICDBAjGIoFGCcYRhiCAsICDRAAGIAEGBQYhwIYsQPCAgoQABiABBgUGIcCwgIFEAAYgATCAg8QABiABBgUGIcCGEYYggLiAwQYACBBiAYBugYGCAEQARgB&sclient=gws-wiz-serp"  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π URL –¥–ª—è –∫—É—Ä—Å–∞ —é–∞–Ω—è

    response_dollar = requests.get(url_dollar, headers=headers)
    response_yuan = requests.get(url_yuan, headers=headers)

    soup_dollar = BeautifulSoup(response_dollar.text, "html.parser")
    soup_yuan = BeautifulSoup(response_yuan.text, "html.parser")

    dollar_rate = soup_dollar.findAll("span", {"class": "DFlfde", "class": "SwHCTb"})[0].text.replace(',', '.')
    yuan_rate = soup_yuan.findAll("span", {"class": "DFlfde", "class": "SwHCTb"})[0].text.replace(',', '.')

    now = datetime.now()
    formatted_datetime = now.strftime("%d.%m.%Y %H:%M:%S")

    dollar_kurs = round(float(dollar_rate), 1)
    yuan_kurs = round(float(yuan_rate) + 0.7, 1)

    if 50000 < (yuan_kurs * price):
        our_com = yuan_kurs * price * 0.06
    elif 30000 < (yuan_kurs * price) < 49999:
        our_com = yuan_kurs * price * 0.07
    elif 25000 < (yuan_kurs * price) < 29999:
        our_com = yuan_kurs * price * 0.08
    elif 15000 < (yuan_kurs * price) < 24999:
        our_com = yuan_kurs * price * 0.09
    elif 10000 < (yuan_kurs * price) < 14999:
        our_com = yuan_kurs * price * 0.10
    elif (yuan_kurs * price) < 9999:
        our_com = 1000

    total_price = (price * round(float(yuan_rate) + 0.7, 1)) + (our_com) + ((massa / 1000) * 26 * yuan_kurs) + (com * round(float(yuan_rate) + 0.7, 1)) + float(kit_com)
    await message.answer(f"–ö–æ–Ω–µ—á–Ω–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å —Ç–æ–≤–∞—Ä–∞ = {round(total_price)} ‚ÇΩ\n\n"
                         f"–ê–∫—Ç—É–∞–ª—å–Ω—ã–π –∫—É—Ä—Å –Ω–∞ {formatted_datetime}: ‚åöÔ∏è\n\n"

                         f"$ (USD) - {round(float(dollar_rate), 1)} ‚ÇΩ\n"
                         f"¬• (CNY) - {round(float(yuan_rate) + 0.7, 1)} ‚ÇΩ\n\n"
                         f"‚ùì–ß—Ç–æ –≤–∫–ª—é—á–∞–µ—Ç –≤ —Å–µ–±—è —Å—Ç–æ–∏–º–æ—Å—Ç—å —Ç–æ–≤–∞—Ä–∞‚ùì\n\n"
                         f"–°—Ç–æ–∏–º–æ—Å—Ç—å —Ç–æ–≤–∞—Ä–∞ –Ω–∞ Poizon —Å —É—á–µ—Ç–æ–º –∞–∫—Ç—É–∞–ª—å–Ω–æ–≥–æ –∫—É—Ä—Å–∞ - {round((price * round(float(yuan_rate) + 0.7, 1)), 5)} ‚ÇΩ\n"
                         f"–ù–∞—à–∞ –∫–æ–º–∏—Å—Å–∏—è - {round(our_com)} ‚ÇΩ\n"
                         f"–î–æ—Å—Ç–∞–≤–∫–∞ –ø–æ –ö–∏—Ç–∞—é - \n"
                         f"–î–æ—Å—Ç–∞–≤–∫–∞ –∏–∑ –ö–∏—Ç–∞—è –≤ –ú–æ—Å–∫–≤—É ‚âà {round(((massa / 1000) * 26 * yuan_kurs), 5)} ‚ÇΩ\n"
                         f"–ö–æ–º–∏—Å—Å–∏—è –Ω–∞—à–µ–≥–æ –ø–æ—Å—Ä–µ–¥–Ω–∏–∫–∞ –∏–∑ –ö–∏—Ç–∞—è - {com * round(float(yuan_rate) + 0.7, 1)} ‚ÇΩ",
                         reply_markup=keyboard)

    # –ó–∞–≤–µ—Ä—à–∏—Ç–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ, —á—Ç–æ–±—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –º–æ–≥ —Å–Ω–æ–≤–∞ –≤—ã–±–∏—Ä–∞—Ç—å —Ç–æ–≤–∞—Ä
    await state.finish()



@dp.message_handler(Text(equals="–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥"))
async def back(message: types.Message):
    kb = [
        [
            types.KeyboardButton(text="–ì–∞–π–¥ –ø–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—é Poizon üìÉ"),
            types.KeyboardButton(text="–û—Ç–∑—ã–≤—ã –Ω–∞—à–∏—Ö üìí")
        ],
        [
            types.KeyboardButton(text="–ê–∫—Ç—É–∞–ª—å–Ω—ã–µ –∫—É—Ä—Å—ã ¬• –∏ $ üìà"),
            types.KeyboardButton(text="–ù–∞—à–∏ —Å–æ—Ü. —Å–µ—Ç–∏ üíª")
        ],
        [
            types.KeyboardButton(text="–†–∞—Å—Å—á–∏—Ç–∞—Ç—å —Ü–µ–Ω—É —Ç–æ–≤–∞—Ä–∞ üí¥"),
            types.KeyboardButton(text="–û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑ üë®üèª‚Äçüíª")
        ]
    ]
    keyboard = types.ReplyKeyboardMarkup(
        keyboard=kb,
        resize_keyboard=True,
        input_field_placeholder="–°—Ç–∞—Ä—Ç–æ–≤–æ–µ –º–µ–Ω—é"
    )
    await message.answer("–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", reply_markup=keyboard)


@dp.message_handler(Text(equals="–û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑ üë®üèª‚Äçüíª"))
async def we(message: types.Message):
    mok_link = 'https://t.me/Mokkkk'

    keyboard = types.InlineKeyboardMarkup()
    mok_link_but = types.InlineKeyboardButton(text="–ù–∞–ø–∏—Å–∞—Ç—å –ø—Ä–æ–¥–∞–≤—Ü—É", url=mok_link)

    keyboard.add(mok_link_but)

    await message.answer("–û—Ñ–æ—Ä–º–ª—è–µ–º –∑–∞–∫–∞–∑—ã –∫—Ä—É–≥–ª–æ—Å—É—Ç–æ—á–Ω–æ, –æ—Ç–≤–µ—á–∞–µ–º –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –±—ã—Å—Ç—Ä–æ:", reply_markup=keyboard)







# –ó–∞–ø—É—Å–∫ –ø—Ä–æ—Ü–µ—Å—Å–∞ –ø–æ–ª–ª–∏–Ω–≥–∞ –Ω–æ–≤—ã—Ö –∞–ø–¥–µ–π—Ç–æ–≤
async def main():
    await dp.start_polling()

if __name__ == "__main__":
    asyncio.run(main())
